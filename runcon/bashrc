# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

#PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
PS1='[\u@\h \W]\$ '

#use local bin if one exists
if [ -d ~/bin ]; then
	export PATH=$PATH:$HOME/bin
fi

#Start Screen at terminal session
#screen -R -d

# ectrat any archive files
extract () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xvjf $1    ;;
			*.tar.gz)    tar xvzf $1    ;;
			*.bz2)       bunzip2 $1     ;;
			*.rar)       unrar x $1     ;;
			*.gz)        gunzip $1      ;;
			*.tar)       tar xvf $1     ;;
			*.tbz2)      tar xvjf $1    ;;
			*.tar.gz)    tar xvzf $1    ;;
			*.tgz)       tar xvzf $1    ;;
			*.zip)       unzip $1       ;;
			*.Z)         uncompress $1  ;;
			*.7z)        7z x $1        ;;
			*)           echo "don't know how to extract '$1'..." ;;
			esac
		else
			echo "'$1' is not a valid file!"
	fi
}

# move up 3 levels in direcotries with up 3
up() { cd $(eval printf '../'%.0s {1..$1}); }

# Genrerate random passwords
randpwd() { (head -c 32 /dev/urandom | sha256sum | base64 | head -c 16 && echo""); }

get() {
	fc -lnr -$1 -$1 | sed -e 's/^\s*//'
}

edit() { sublime $1 & }

# Kill all detached screens only.
killscreens () {
	screen -ls | grep Detached | cut -d. -f1 | awk '{print $1}' | xargs kill
}

ascii () {
	man ascii | grep --color=never -B3 -A1 '[A-F0-9]:'
}

#Change prompt when inside version contol directories.
VCPROMPT="vcprompt"
if [ $(uname -o) == "Cygwin" ]; then
	VCPROMPT="vcprompt.exe"
fi
#export PS1_BACK=$PS1
#if [ -f ~/bin/$VCPROMPT ]; then
#	update_prompt() {
#		PRMT=$($VCPROMPT)
#		if [ -z "${PRMT// }" ]; then
#			export PS1=$PS1_BACK
#		else
#			export PS1='$($VCPROMPT -f [%d@%n:%b%u%m]~%w$) '
#		fi
#	}
#	PROMPT_COMMAND=update_prompt
#fi

# Aliases that makes life simple.
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias byebye='sudo shutdown -P now'
alias py='python3.4'
alias sl='ls'
alias open='gnome-open'
alias pl='perl'
alias gst='git status'
alias create='create.pl'

# remove stty ^S binding
stty stop ""
export EDITOR="vim"

if [ -f ~/.env ]; then
	source ~/.env
fi

sh ~/customizer/scripts/greet.sh

